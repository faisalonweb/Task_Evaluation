var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.057,1,1.269]],["body/controllers/AppController.html",[0,1.593,1,1.911,2,1.246,3,0.861,4,0.705,5,0.705,6,2.225,7,0.861,8,1.911,9,3.304,10,1.807,11,0.07,12,1.246,13,2.859,14,1.495,15,1.593,16,1.1,17,0.861,18,1.463,19,2.225,20,0.861,21,0.861,22,2.225,23,2.859,24,1.495,25,2.859,26,0.054,27,0.054]],["title/modules/AppModule.html",[28,1.057,29,1.269]],["body/modules/AppModule.html",[1,1.837,2,1.328,3,0.656,4,0.537,5,0.537,11,0.07,16,1.249,17,0.656,18,1.507,19,1.695,20,0.656,21,0.656,26,0.045,27,0.045,28,1.531,29,2.272,30,0.949,31,0.949,32,1.377,33,1.377,34,0.949,35,2.221,36,1.377,37,1.695,38,1.695,39,1.695,40,1.808,41,1.926,42,1.377,43,1.377,44,2.179,45,2.371,46,1.695,47,1.139,48,2.179,49,2.179,50,2.179,51,1.695,52,2.179,53,0.949,54,3.047,55,2.179,56,2.179,57,2.179,58,2.179,59,2.179,60,2.179,61,2.179,62,1.377,63,2.179,64,2.179,65,1.377,66,2.179,67,2.179,68,3.047,69,2.179,70,2.179]],["title/injectables/AppService.html",[18,0.881,71,1.057]],["body/injectables/AppService.html",[3,0.912,4,0.747,5,0.747,7,0.912,8,1.983,9,3.375,11,0.069,12,1.32,14,1.584,15,1.652,16,0.912,17,0.912,18,1.377,20,0.912,21,0.912,24,1.584,26,0.056,27,0.056,71,1.652,72,1.915,73,2.358,74,3.03,75,3.03,76,3.03]],["title/entities/User.html",[77,1.534,78,0.881]],["body/entities/User.html",[3,0.682,4,0.559,5,0.559,7,0.682,10,2.568,11,0.07,12,1.77,15,1.912,16,0.682,20,0.682,21,0.682,26,0.046,27,0.046,53,1.831,62,1.433,77,1.98,78,1.138,79,1.764,80,1.98,81,2.268,82,2.268,83,2.268,84,2.268,85,2.268,86,1.433,87,3.132,88,2.267,89,4.306,90,2.267,91,2.267,92,3.132,93,2.267,94,2.267,95,2.267,96,1.433,97,1.433,98,2.447,99,1.433,100,1.433,101,1.433]],["title/controllers/UsersController.html",[0,1.057,102,1.269]],["body/controllers/UsersController.html",[0,0.49,2,0.49,3,0.339,4,0.278,5,0.278,7,0.339,8,0.963,10,1.883,11,0.071,12,1.298,14,1.962,15,1.954,16,0.704,17,0.339,20,0.339,21,0.339,22,0.876,24,1.558,26,0.027,27,0.027,53,1.535,65,2.022,78,1.363,81,2.371,82,2.371,83,2.227,84,2.371,85,2.371,86,1.707,97,1.164,98,2.227,99,1.477,100,1.164,101,1.164,102,0.963,103,0.876,104,1.125,105,1.819,106,1.819,107,1.819,108,1.433,109,2.701,110,1.433,111,1.819,112,0.876,113,2.337,114,1.125,115,2.102,116,2.102,117,2.102,118,2.742,119,1.164,120,1.433,121,2.102,122,0.876,123,1.841,124,1.125,125,1.125,126,1.433,127,1.819,128,1.125,129,0.876,130,1.841,131,1.125,132,1.433,133,0.876,134,1.841,135,1.125,136,1.433,137,1.433,138,1.125,139,1.125,140,3.051,141,0.711,142,0.669,143,1.125,144,1.125,145,1.125,146,1.125,147,1.125,148,1.125,149,1.841,150,1.841,151,1.841,152,1.841,153,1.125,154,1.125,155,0.876,156,1.125,157,1.125,158,1.125]],["title/modules/UsersModule.html",[28,1.057,40,1.057]],["body/modules/UsersModule.html",[2,1.486,3,0.774,4,0.634,5,0.634,11,0.07,16,1.277,17,0.774,20,0.774,21,0.774,26,0.05,27,0.05,28,1.667,30,1.12,31,1.12,32,1.624,33,1.624,34,1.12,35,2.419,36,1.624,40,1.9,41,2.155,42,1.624,43,1.624,45,2,46,2,47,1.344,78,0.933,102,2.001,141,1.624,142,1.583,159,2,160,2,161,2.57,162,2.57,163,2.57,164,2.57]],["title/injectables/UsersService.html",[71,1.057,142,0.881]],["body/injectables/UsersService.html",[3,0.335,4,0.275,5,0.275,7,0.335,8,0.955,11,0.071,12,1.387,14,1.955,15,1.951,16,0.808,17,0.335,20,0.335,21,0.335,24,1.404,26,0.027,27,0.027,47,0.582,53,1.583,65,2.012,71,0.796,72,0.704,78,1.42,81,2.363,82,2.363,83,2.296,84,2.363,85,2.363,86,1.697,96,0.704,97,1.154,98,2.218,99,1.154,100,1.154,101,1.154,105,1.421,106,1.806,107,2.477,108,1.421,110,1.421,111,1.806,112,0.867,115,2.306,116,2.306,117,2.306,118,2.91,119,1.154,120,1.421,121,2.089,122,1.421,126,1.421,127,1.421,129,1.421,132,1.421,133,0.867,136,1.421,137,1.421,140,2.981,141,0.704,142,0.663,155,1.421,165,0.867,166,2.685,167,1.826,168,1.114,169,2.089,170,1.114,171,1.826,172,1.114,173,1.114,174,1.826,175,1.114,176,1.114,177,1.114,178,1.114,179,1.114,180,1.114,181,1.114,182,1.114,183,1.114,184,1.114,185,1.114,186,1.114,187,1.114,188,1.114]],["title/coverage.html",[189,2.074]],["body/coverage.html",[0,1.567,1,1.458,5,0.688,6,2.169,11,0.068,18,1.012,26,0.053,27,0.053,34,1.215,53,1.215,71,1.567,73,2.169,77,1.762,78,1.306,79,2.169,102,1.458,103,2.169,119,1.762,142,1.012,165,2.169,189,1.762,190,2.788,191,2.788,192,2.788,193,4.536,194,3.596,195,2.169,196,2.788,197,3.596,198,3.596,199,2.788,200,2.169,201,2.788,202,2.788,203,2.788]],["title/dependencies.html",[31,1.268,204,1.589]],["body/dependencies.html",[11,0.071,17,0.938,26,0.057,27,0.057,31,1.357,47,1.628,51,2.423,96,1.968,205,4.19,206,3.114,207,3.114,208,3.114,209,3.114,210,3.114,211,3.114,212,3.114,213,3.114,214,3.114,215,3.114,216,3.114,217,3.114,218,3.114]],["title/miscellaneous/functions.html",[219,1.589,220,2.265]],["body/miscellaneous/functions.html",[7,1.069,11,0.061,26,0.061,27,0.061,34,1.932,195,2.762,219,2.762,220,2.762,221,3.55]],["title/index.html",[7,0.615,222,2.042,223,2.042]],["body/index.html",[4,0.564,11,0.069,26,0.046,27,0.046,169,1.779,189,1.445,224,2.286,225,2.286,226,3.15,227,2.286,228,2.286,229,2.286,230,2.286,231,2.286,232,2.286,233,1.779,234,3.604,235,2.286,236,2.286,237,2.286,238,3.604,239,4.316,240,2.286,241,2.286,242,2.286,243,4.212,244,2.286,245,2.286,246,3.15,247,2.286,248,2.286,249,2.286,250,2.286,251,3.15,252,3.15,253,2.286,254,2.286,255,2.286,256,3.15,257,3.15,258,2.286,259,2.286,260,2.286,261,2.286,262,2.286,263,1.779,264,2.286,265,2.286,266,2.286,267,2.286,268,2.286,269,2.286,270,2.286,271,2.286,272,2.286,273,2.286,274,1.779,275,2.286,276,2.286,277,2.286,278,2.286,279,2.286,280,2.286,281,1.779]],["title/modules.html",[30,1.43]],["body/modules.html",[11,0.061,26,0.061,27,0.061,29,1.821,30,1.518,40,1.518,263,3.212,282,4.128,283,4.128,284,4.128]],["title/overview.html",[285,2.553]],["body/overview.html",[2,1.239,11,0.065,18,1.46,26,0.054,27,0.054,28,1.239,29,2.344,30,1.239,31,1.239,32,1.798,33,1.798,34,1.239,35,1.798,36,1.798,37,2.214,38,2.214,39,2.214,40,1.909,41,2.303,42,1.798,43,1.798,62,1.798,72,1.798,142,1.46,159,2.214,160,2.214,200,2.214,285,2.214,286,4.02,287,3.643]],["title/properties.html",[80,1.839,204,1.589]],["body/properties.html",[11,0.069,26,0.061,27,0.061,80,2.202,233,2.711,274,2.711,281,2.711,288,3.483,289,3.483,290,3.483]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":289,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":215,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":218,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":197,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":194,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":198,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":201,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":287,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":205,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":210,"title":{},"body":{"dependencies.html":{}}}],["1234",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["2",{"_index":286,"title":{},"body":{"overview.html":{}}}],["3.2.3",{"_index":206,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["7.8.1",{"_index":217,"title":{},"body":{"dependencies.html":{}}}],["8.12.0",{"_index":212,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["actions",{"_index":81,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["amazing",{"_index":264,"title":{},"body":{"index.html":{}}}],["app",{"_index":241,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":232,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":107,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":274,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":155,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":265,"title":{},"body":{"index.html":{}}}],["body",{"_index":139,"title":{},"body":{"controllers/UsersController.html":{}}}],["body('actions",{"_index":152,"title":{},"body":{"controllers/UsersController.html":{}}}],["body('email",{"_index":151,"title":{},"body":{"controllers/UsersController.html":{}}}],["body('firstname",{"_index":149,"title":{},"body":{"controllers/UsersController.html":{}}}],["body('lastname",{"_index":150,"title":{},"body":{"controllers/UsersController.html":{}}}],["boolean",{"_index":98,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":284,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":282,"title":{},"body":{"modules.html":{}}}],["building",{"_index":227,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":159,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":160,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":89,"title":{},"body":{"entities/User.html":{}}}],["column('jsonb",{"_index":87,"title":{},"body":{"entities/User.html":{}}}],["configmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":183,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor",{"_index":167,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["constructor(usersrepository",{"_index":168,"title":{},"body":{"injectables/UsersService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('users",{"_index":144,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controllers/users.controller",{"_index":162,"title":{},"body":{"modules/UsersModule.html":{}}}],["coverage",{"_index":189,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":97,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser",{"_index":106,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(firstname",{"_index":112,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["database",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":99,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete('/:id",{"_index":123,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":127,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser",{"_index":108,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param('id",{"_index":154,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(id",{"_index":122,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleting",{"_index":174,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":233,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":242,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":253,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":228,"title":{},"body":{"index.html":{}}}],["email",{"_index":82,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["entities",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":141,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":77,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":238,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":209,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["first",{"_index":121,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["firstname",{"_index":83,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":226,"title":{},"body":{"index.html":{}}}],["function",{"_index":196,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":220,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":130,"title":{},"body":{"controllers/UsersController.html":{}}}],["getalluser",{"_index":166,"title":{},"body":{"injectables/UsersService.html":{}}}],["getallusers",{"_index":109,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":222,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":110,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuserbyid(@param('id",{"_index":147,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(id",{"_index":129,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["grow",{"_index":260,"title":{},"body":{"index.html":{}}}],["hello",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":271,"title":{},"body":{"index.html":{}}}],["host",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":278,"title":{},"body":{"index.html":{}}}],["id",{"_index":84,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":71,"title":{"injectables/AppService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":72,"title":{},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":178,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(user",{"_index":179,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":237,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":240,"title":{},"body":{"index.html":{}}}],["interface",{"_index":200,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["join",{"_index":267,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":275,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":85,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":281,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":257,"title":{},"body":{"index.html":{}}}],["literal",{"_index":86,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["localhost",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["message",{"_index":126,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":214,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":219,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":256,"title":{},"body":{"index.html":{}}}],["mode",{"_index":246,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":270,"title":{},"body":{"index.html":{}}}],["move",{"_index":101,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["myśliwiec",{"_index":276,"title":{},"body":{"index.html":{}}}],["name",{"_index":116,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":234,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":280,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":207,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":208,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":119,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":225,"title":{},"body":{"index.html":{}}}],["npm",{"_index":239,"title":{},"body":{"index.html":{}}}],["open",{"_index":258,"title":{},"body":{"index.html":{}}}],["optional",{"_index":117,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":285,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":204,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":140,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param('id",{"_index":157,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":115,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["password",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["pg",{"_index":211,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":268,"title":{},"body":{"index.html":{}}}],["port",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":113,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":104,"title":{},"body":{"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":95,"title":{},"body":{"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":92,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":180,"title":{},"body":{"injectables/UsersService.html":{}}}],["production",{"_index":248,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":224,"title":{},"body":{"index.html":{}}}],["project",{"_index":259,"title":{},"body":{"index.html":{}}}],["promise",{"_index":118,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":80,"title":{"properties.html":{}},"body":{"entities/User.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["put",{"_index":138,"title":{},"body":{"controllers/UsersController.html":{}}}],["put('/:id",{"_index":134,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":269,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":213,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":169,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":243,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":216,"title":{},"body":{"dependencies.html":{}}}],["saves",{"_index":120,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["scalable",{"_index":229,"title":{},"body":{"index.html":{}}}],["server",{"_index":230,"title":{},"body":{"index.html":{}}}],["services/users.service",{"_index":143,"title":{},"body":{"controllers/UsersController.html":{}}}],["side",{"_index":231,"title":{},"body":{"index.html":{}}}],["single",{"_index":132,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":262,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":221,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":73,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":195,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/controllers/users.controller.ts",{"_index":103,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/controllers/users.controller.ts:21",{"_index":128,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controllers/users.controller.ts:29",{"_index":131,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controllers/users.controller.ts:42",{"_index":114,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controllers/users.controller.ts:63",{"_index":124,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controllers/users.controller.ts:78",{"_index":135,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/entities/user.entity.ts",{"_index":79,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:12",{"_index":94,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:15",{"_index":90,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:18",{"_index":88,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":93,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":91,"title":{},"body":{"entities/User.html":{}}}],["src/users/models/user.model.ts",{"_index":199,"title":{},"body":{"coverage.html":{}}}],["src/users/services/users.service.ts",{"_index":165,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/services/users.service.ts:17",{"_index":175,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:26",{"_index":176,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:38",{"_index":172,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:6",{"_index":170,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:62",{"_index":173,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:75",{"_index":177,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.module.ts",{"_index":161,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":244,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":247,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":249,"title":{},"body":{"index.html":{}}}],["started",{"_index":223,"title":{"index.html":{}},"body":{}}],["starter",{"_index":236,"title":{},"body":{"index.html":{}}}],["statements",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":272,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["support",{"_index":263,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":283,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":203,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":202,"title":{},"body":{"coverage.html":{}}}],["task_database",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":252,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":255,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":254,"title":{},"body":{"index.html":{}}}],["tests",{"_index":251,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":261,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.getuserbyid(id",{"_index":188,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.createuser(firstname",{"_index":153,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.deleteuser(id",{"_index":156,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getalluser",{"_index":146,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getuserbyid(id",{"_index":148,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.updateuser(id",{"_index":158,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersrepository.create",{"_index":184,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.delete(id",{"_index":186,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":181,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":182,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":185,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update(id",{"_index":187,"title":{},"body":{"injectables/UsersService.html":{}}}],["touch",{"_index":273,"title":{},"body":{"index.html":{}}}],["true",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":279,"title":{},"body":{"index.html":{}}}],["type",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typeorm",{"_index":96,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":164,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":235,"title":{},"body":{"index.html":{}}}],["unit",{"_index":250,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":125,"title":{},"body":{"controllers/UsersController.html":{}}}],["unlicensed",{"_index":290,"title":{},"body":{"properties.html":{}}}],["updated",{"_index":136,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuser",{"_index":111,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":133,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updating",{"_index":137,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user",{"_index":78,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["username",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":105,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":163,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":102,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":145,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersmodule",{"_index":40,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":171,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":142,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["version",{"_index":288,"title":{},"body":{"properties.html":{}}}],["view",{"_index":100,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["watch",{"_index":245,"title":{},"body":{"index.html":{}}}],["website",{"_index":277,"title":{},"body":{"index.html":{}}}],["world",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":266,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: 'localhost',\n      port: 5432,\n      password: '1234',\n      username: 'postgres',\n      entities: [__dirname + '/**/*.entity{.ts,.js}'],\n      database: 'task_database',\n      synchronize: true,\n      logging: true,\n    }),\n    UsersModule,\n    ConfigModule.forRoot(),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actions\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column()\n  email: string;\n\n  @Column('jsonb')\n  actions: {\n    create: boolean;\n    delete: boolean;\n    view: boolean;\n    move: boolean;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/controllers/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createUser\n                            \n                            \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                getAllUsers\n                            \n                            \n                                    \n                                getUserById\n                            \n                            \n                                    \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(firstName: string, lastName: string, email: string, actions: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/controllers/users.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actions\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                a new user and saves it first in the database\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/controllers/users.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                a message that the user is deleted from the database\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/controllers/users.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                all users\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/controllers/users.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                a single user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, firstName: string, lastName: string, email: string, actions: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/controllers/users.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actions\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                the updated user from the database after updating it first\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Put,\n  Body,\n  Param,\n} from '@nestjs/common';\nimport { User } from '../entities/user.entity';\nimport { UsersService } from '../services/users.service';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private userService: UsersService) {}\n\n  /**\n   * @returns all users\n   */\n  @Get()\n  getAllUsers(): Promise {\n    return this.userService.getAllUser();\n  }\n  /**\n   * @param id\n   * @returns a single user\n   */\n  @Get('/:id')\n  getUserById(@Param('id') id: string): Promise {\n    return this.userService.getUserById(id);\n  }\n\n  /**\n   * \n   * @param firstName\n   * @param lastName\n   * @param email\n   * @param actions\n   * @returns a new user and saves it first in the database\n   */\n  @Post()\n  createUser(\n    @Body('firstName') firstName: string,\n    @Body('lastName') lastName: string,\n    @Body('email') email: string,\n    @Body('actions')\n    actions: {\n      create: boolean;\n      delete: boolean;\n      view: boolean;\n      move: boolean;\n    },\n  ): Promise {\n    return this.userService.createUser(firstName, lastName, email, actions);\n  }\n\n  /**\n   * \n   * @param id\n   * @returns a message that the user is deleted from the database\n   */\n  @Delete('/:id')\n  async deleteUser(@Param('id') id: string) {\n    await this.userService.deleteUser(id);\n    return `user ${id} is deleted`;\n  }\n\n  /**\n   * \n   * @param id\n   * @param firstName\n   * @param lastName\n   * @param email\n   * @param actions\n   * @returns the updated user from the database after updating it first\n   */\n  @Put('/:id')\n  updateUser(\n    @Param('id') id: string,\n    @Body('firstName') firstName: string,\n    @Body('lastName') lastName: string,\n    @Body('email') email: string,\n    @Body('actions')\n    actions: {\n      create: boolean;\n      delete: boolean;\n      view: boolean;\n      move: boolean;\n    },\n  ): Promise {\n    return this.userService.updateUser(id, firstName, lastName, email, actions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { UsersController } from './controllers/users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                getAllUser\n                            \n                            \n                                getUserById\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(firstName: string, lastName: string, email: string, actions: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/services/users.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actions\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                a new user and saves it first in the database\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/services/users.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                a message that the user is deleted from the database after deleting the user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUser\n                        \n                    \n                \n            \n            \n                \ngetAllUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/services/users.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                all users\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/services/users.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                a single user by id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, firstName: string, lastName: string, email: string, actions: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/services/users.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actions\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                the updated user from the database after updating it first\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../entities/user.entity';\n@Injectable()\nexport class UsersService {\n  \n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n  ) {}\n\n  /**\n   * \n   * @returns all users\n   */\n  getAllUser(): Promise {\n    return this.usersRepository.find();\n  }\n\n  /**\n   *\n   * @param id\n   * @returns a single user by id\n   */\n  getUserById(id: string): Promise {\n    return this.usersRepository.findOne({ where: { id } });\n  }\n\n  /**\n   *\n   * @param firstName\n   * @param lastName\n   * @param email\n   * @param actions\n   * @returns a new user and saves it first in the database\n   */\n  createUser(\n    firstName: string,\n    lastName: string,\n    email: string,\n    actions: {\n      create: boolean;\n      delete: boolean;\n      view: boolean;\n      move: boolean;\n    },\n  ): Promise {\n    const user = this.usersRepository.create({\n      firstName,\n      lastName,\n      email,\n      actions,\n    });\n    return this.usersRepository.save(user);\n  }\n\n  /**\n   * @param id \n   * @returns a message that the user is deleted from the database after deleting the user\n   */\n  async deleteUser(id: string): Promise {\n    await this.usersRepository.delete(id);\n  }\n\n  /**\n   * \n   * @param id\n   * @param firstName\n   * @param lastName\n   * @param email\n   * @param actions\n   * @returns the updated user from the database after updating it first\n   */\n  async updateUser(\n    id: string,\n    firstName: string,\n    lastName: string,\n    email: string,\n    actions: {\n      create: boolean;\n      delete: boolean;\n      view: boolean;\n      move: boolean;\n    },\n  ): Promise {\n    await this.usersRepository.update(id, {\n      firstName,\n      lastName,\n      email,\n      actions,\n    });\n    return this.getUserById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/controllers/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            pg : ^8.12.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
