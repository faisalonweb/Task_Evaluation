var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Action.html",[0,0.101,1,0.899]],["body/interfaces/Action.html",[0,0.132,1,1.479,2,0.732,3,0.864,4,0.864,5,0.732,6,1.403,7,0.413,8,0.83,9,2.857,10,1.738,11,2.103,12,1.664,13,0.632,14,0.064,15,1.361,16,1.554,17,0.989,18,1.372,19,1.61,20,0.989,21,1.015,22,1.191,23,1.191,24,2.023,25,2.023,26,2.023,27,2.023,28,1.664,29,1.61,30,0.864,31,2.04,32,1.61,33,1.61,34,1.191,35,1.015,36,1.61,37,1.416,38,1.896,39,1.015,40,1.322,41,1.191,42,1.191,43,1.015,44,1.191,45,1.668,46,1.668,47,1.191,48,1.191,49,1.61,50,1.668,51,1.668,52,1.668,53,1.668,54,1.668,55,1.167,56,1.191,57,1.403,58,1.191,59,1.191,60,1.668,61,1.668,62,1.668,63,1.668,64,1.668,65,0.864,66,0.864,67,0.043,68,0.043]],["title/interfaces/ButtonProps.html",[0,0.101,69,1.736]],["body/interfaces/ButtonProps.html",[0,0.1,2,0.753,3,0.889,4,0.889,5,0.753,7,0.425,8,0.846,13,0.792,14,0.064,15,1.427,16,1.044,17,1.008,20,1.33,33,1.226,37,0.889,39,1.044,55,0.889,65,0.889,66,0.889,67,0.043,68,0.043,69,2.298,70,1.716,71,2.313,72,3.499,73,3.499,74,3.499,75,2.55,76,3.499,77,3.499,78,1.641,79,3.98,80,2.179,81,2.082,82,2.637,83,2.082,84,1.444,85,2.082,86,2.082,87,1.444,88,2.082,89,2.082,90,3.143,91,1.444,92,2.082,93,1.444,94,1.444,95,1.444]],["title/interfaces/ModalProps.html",[0,0.101,30,0.899]],["body/interfaces/ModalProps.html",[0,0.129,1,1.545,2,0.707,3,0.835,4,0.835,5,0.707,6,1.356,7,0.399,8,0.811,9,2.203,10,1.34,11,1.792,12,1.641,13,0.698,14,0.064,15,1.351,16,1.527,17,0.966,18,1.34,19,1.573,20,0.966,21,0.981,22,1.151,23,1.151,24,1.956,25,1.956,26,1.956,27,1.956,28,1.641,29,1.573,30,1.141,31,2.169,32,2.016,33,1.573,34,1.926,35,0.981,36,2.016,37,1.397,38,1.853,39,0.981,40,1.299,41,1.151,42,1.151,43,0.981,44,1.151,45,1.612,46,1.612,47,1.151,48,1.151,49,1.573,50,1.612,51,1.612,52,1.612,53,1.612,54,1.612,55,1.141,56,1.151,57,1.356,58,1.151,59,1.151,60,1.612,61,1.612,62,1.612,63,1.612,64,1.612,65,0.835,66,0.835,67,0.042,68,0.042,71,1.573,78,1.926]],["title/interfaces/ModalProps-1.html",[0,0.086,30,0.765,96,1.792]],["body/interfaces/ModalProps-1.html",[0,0.094,1,1.301,2,0.461,3,0.545,4,0.545,5,0.461,7,0.26,8,0.595,10,1.342,11,0.751,12,1.591,13,0.589,14,0.064,15,1.239,16,1.196,17,0.708,18,1.448,19,1.153,20,0.708,21,0.64,22,0.751,23,0.751,28,1.448,29,0.751,30,0.836,31,1.793,32,1.699,33,1.153,34,1.699,35,0.982,36,1.699,37,1.433,39,0.64,40,1.232,41,1.404,42,0.751,43,0.64,44,0.751,47,0.751,48,0.751,49,0.751,55,0.836,56,0.751,58,0.751,59,0.751,65,0.545,66,0.545,67,0.031,68,0.031,71,1.153,75,2.2,78,1.575,80,0.885,84,1.653,87,0.885,91,1.653,93,2.376,94,2.112,95,1.653,97,0.885,98,0.724,99,1.404,100,1.404,101,1.575,102,1.448,103,1.575,104,1.342,105,1.575,106,1.153,107,1.615,108,1.615,109,1.615,110,2.917,111,1.052,112,1.052,113,1.052,114,1.052,115,1.052,116,1.052,117,1.052,118,0.885,119,1.052,120,1.052,121,1.052,122,1.052,123,1.052,124,1.052,125,1.052,126,1.052,127,1.615,128,1.615,129,1.615,130,1.052,131,1.052,132,1.052,133,1.052,134,1.052,135,1.052,136,1.052,137,1.966,138,3.16,139,1.966,140,2.616,141,2.206,142,1.966,143,1.966,144,2.206,145,1.966,146,2.38,147,2.768,148,1.966,149,1.966,150,1.966,151,1.653,152,1.966,153,2.206,154,2.206,155,1.966,156,1.966,157,1.052,158,1.966,159,1.052,160,1.052,161,1.052,162,1.052,163,1.052,164,1.052,165,1.052,166,1.052,167,1.615,168,1.052,169,1.052,170,1.052,171,1.052,172,1.052,173,1.052,174,0.885,175,1.052]],["title/interfaces/UserPayload.html",[0,0.101,98,0.639]],["body/interfaces/UserPayload.html",[0,0.123,2,0.921,3,1.087,4,1.087,5,0.921,7,0.519,8,0.964,12,1.817,13,0.786,14,0.062,15,1.446,40,1.547,65,1.087,67,0.049,68,0.049,71,1.869,98,0.964,99,2.133,100,2.133,101,2.133,102,1.277,103,1.499,104,1.277,105,1.499,176,2.547,177,2.547,178,3.623,179,2.618]],["title/interfaces/UserPayload-1.html",[0,0.086,96,1.792,98,0.544]],["body/interfaces/UserPayload-1.html",[0,0.095,1,1.024,2,0.466,3,0.55,4,0.55,5,0.466,7,0.263,8,0.599,10,1.348,11,0.758,12,1.454,13,0.624,14,0.064,15,1.282,16,1.203,17,0.714,18,1.454,19,1.162,20,0.714,21,0.646,22,0.758,23,0.758,28,1.454,29,0.758,30,0.55,31,1.412,32,1.162,33,1.162,34,1.162,35,0.99,36,1.162,37,1.437,39,0.646,40,1.402,41,1.412,42,0.758,43,0.646,44,0.758,47,0.758,48,0.758,49,0.758,55,0.842,56,0.758,58,0.758,59,0.758,65,0.55,66,0.55,67,0.031,68,0.031,75,2.207,80,0.893,84,1.663,87,0.893,91,1.663,93,2.382,94,2.12,95,1.663,97,0.893,98,0.816,99,1.8,100,1.8,101,1.874,102,1.454,103,1.583,104,1.348,105,1.583,106,1.162,107,1.627,108,1.627,109,1.627,110,2.923,111,1.062,112,1.062,113,1.062,114,1.062,115,1.062,116,1.062,117,1.062,118,0.893,119,1.062,120,1.062,121,1.062,122,1.062,123,1.062,124,1.062,125,1.062,126,1.062,127,1.627,128,1.627,129,1.627,130,1.062,131,1.062,132,1.062,133,1.062,134,1.062,135,1.062,136,1.062,137,1.978,138,3.164,139,1.978,140,2.624,141,2.217,142,1.978,143,1.978,144,2.217,145,1.978,146,2.39,147,2.776,148,1.978,149,1.978,150,1.978,151,1.663,152,1.978,153,2.217,154,2.217,155,1.978,156,1.978,157,1.062,158,1.978,159,1.062,160,1.062,161,1.062,162,1.062,163,1.062,164,1.062,165,1.062,166,1.062,167,1.627,168,1.062,169,1.062,170,1.062,171,1.062,172,1.062,173,1.062,174,0.893,175,1.062,179,1.627]],["title/interfaces/UserPayload-2.html",[0,0.086,98,0.544,174,1.242]],["body/interfaces/UserPayload-2.html",[0,0.102,2,0.766,3,0.905,4,0.905,5,0.766,7,0.432,8,0.856,12,1.696,13,0.738,14,0.064,15,1.374,16,1.766,17,1.147,18,1.063,20,0.766,22,1.248,23,1.248,28,1.063,35,1.063,37,1.443,40,1.443,43,1.415,55,0.905,65,0.905,66,0.905,67,0.044,68,0.044,98,0.963,99,1.99,100,1.99,101,1.99,102,1.063,103,1.248,104,1.063,105,1.248,106,1.248,118,1.47,179,2.326,180,1.748,181,2.685,182,2.685,183,2.326,184,2.685,185,2.12,186,2.326,187,2.12,188,2.12,189,2.12,190,2.12,191,2.12,192,2.12,193,2.12,194,2.12,195,2.12,196,2.12,197,2.12,198,2.12,199,2.12,200,2.821,201,1.748,202,2.12,203,2.12,204,2.12,205,2.12]],["title/coverage.html",[206,2.809]],["body/coverage.html",[0,0.174,1,0.825,5,0.698,6,2.097,13,0.394,14,0.063,20,0.698,21,0.969,30,1.131,38,1.339,67,0.041,68,0.041,69,1.592,70,2.184,78,1.137,97,2.097,98,0.918,106,1.137,176,1.932,177,1.932,180,2.184,183,1.592,186,1.592,201,1.592,206,1.932,207,1.932,208,2.446,209,2.446,210,1.932,211,5.043,212,1.592,213,5.124,214,5.056,215,3.356,216,1.932,217,1.932,218,2.662,219,2.662,220,1.932,221,1.932,222,1.932,223,1.932,224,1.932,225,1.932,226,1.932,227,1.932,228,1.932,229,1.932,230,2.446,231,2.446,232,3.83,233,2.65,234,1.932,235,1.932,236,1.932,237,1.932,238,2.446,239,2.446]],["title/dependencies.html",[240,1.792,241,2.074]],["body/dependencies.html",[14,0.063,17,1.339,67,0.051,68,0.051,81,2.709,185,2.709,241,2.233,242,3.431,243,3.431,244,3.431,245,4.505,246,3.431,247,4.505,248,3.431,249,3.431,250,3.431,251,3.431,252,3.431,253,3.431,254,3.431,255,3.431,256,3.431,257,3.431,258,3.431,259,4.178,260,2.709,261,3.431,262,3.431,263,3.431,264,3.431,265,3.431,266,3.431,267,3.431]],["title/miscellaneous/functions.html",[268,0.899,269,2.515]],["body/miscellaneous/functions.html",[7,0.594,10,1.46,13,0.594,14,0.057,67,0.054,68,0.054,71,1.714,218,2.018,219,2.388,220,3.444,268,1.46,269,2.911,270,2.4,271,3.687,272,4.646,273,3.792,274,3.444,275,3.444,276,3.687,277,3.687]],["title/index.html",[7,0.365,278,1.792,279,1.792]],["body/index.html",[14,0.043,17,1.296,57,2.16,67,0.043,68,0.043,102,1.562,104,1.026,151,1.418,207,2.755,212,2.954,241,1.686,260,2.755,278,2.046,279,2.046,280,4.221,281,2.591,282,2.591,283,2.591,284,4.221,285,2.591,286,2.591,287,2.591,288,2.591,289,2.591,290,2.591,291,2.591,292,2.591,293,2.591,294,2.591,295,3.489,296,2.591,297,2.591,298,2.591,299,3.489,300,2.591,301,2.591,302,2.591,303,2.591,304,2.591,305,3.489,306,2.591,307,2.591,308,4.221,309,3.489,310,4.538,311,2.591,312,3.489,313,2.591,314,2.591,315,2.591,316,2.591,317,2.591,318,2.591,319,2.591,320,2.591,321,2.591,322,2.591,323,2.591,324,3.489,325,2.591,326,2.591,327,4.406,328,2.591,329,2.591,330,2.591,331,2.591,332,2.591,333,2.591,334,2.591,335,2.591,336,2.591,337,2.591,338,3.489,339,3.489,340,2.591,341,2.591,342,2.591,343,2.591,344,2.591,345,2.591,346,2.591,347,2.591,348,2.591,349,2.591,350,2.591,351,2.591,352,2.591,353,2.591,354,2.591,355,2.591,356,2.591,357,2.591,358,2.591,359,2.591,360,2.591,361,3.489,362,2.591,363,2.591,364,2.591,365,2.591,366,3.489,367,2.591,368,3.489,369,2.591,370,2.591,371,2.591,372,2.591,373,2.591,374,2.591,375,2.591,376,2.591,377,2.591,378,2.591,379,2.591,380,2.591,381,2.591,382,3.945,383,2.591,384,2.591]],["title/modules.html",[385,2.809]],["body/modules.html",[14,0.056,67,0.056,68,0.056,385,3.167]],["title/overview.html",[386,2.809]],["body/overview.html",[2,1.138,14,0.056,67,0.056,68,0.056,386,3.146,387,3.984]],["title/properties.html",[8,0.763,240,1.792]],["body/properties.html",[8,0.952,14,0.059,67,0.056,68,0.056,388,3.971,389,3.971]],["title/miscellaneous/typealiases.html",[268,0.899,390,3.185]],["body/miscellaneous/typealiases.html",[7,0.625,13,0.625,14,0.055,67,0.055,68,0.055,78,1.803,218,2.124,219,2.461,268,1.536,270,2.526,273,3.549,391,3.88]],["title/miscellaneous/variables.html",[268,0.899,392,2.515]],["body/miscellaneous/variables.html",[1,0.794,6,0.482,7,0.142,9,0.573,10,1.147,11,2.035,13,0.499,14,0.065,15,0.934,18,1.147,19,0.703,20,0.673,21,0.599,28,1.448,29,1.346,31,1.346,32,0.703,34,0.409,35,0.933,36,1.346,37,1.516,38,0.828,39,0.787,40,1.102,41,1.096,42,1.096,43,1.404,44,0.703,45,0.573,46,0.573,47,0.703,48,0.703,49,0.924,50,0.573,51,0.573,52,0.573,53,0.573,54,0.573,55,1.437,56,0.703,57,0.482,58,0.703,59,0.703,60,0.573,61,0.573,62,0.573,63,0.573,64,0.573,66,1.437,67,0.019,68,0.019,70,0.573,72,0.695,73,0.695,74,0.695,75,1.941,76,0.695,77,0.695,80,0.482,83,0.695,84,1.29,85,0.695,86,0.695,87,0.828,88,0.695,89,0.695,90,1.569,91,1.29,92,0.695,93,2.002,94,1.697,95,1.29,97,0.482,98,0.476,99,0.703,100,0.703,101,1.096,102,0.933,103,1.096,104,0.787,105,0.924,106,0.703,107,0.984,108,0.984,109,0.984,110,2.445,111,0.573,112,0.573,113,0.573,114,0.573,115,0.573,116,0.573,117,0.573,118,1.088,119,0.573,120,0.573,121,0.573,122,0.573,123,0.573,124,0.573,125,0.573,126,0.573,127,0.984,128,0.984,129,0.984,130,0.573,131,0.573,132,0.573,133,0.573,134,0.573,135,0.573,136,0.573,137,1.294,138,2.85,139,1.294,140,2.017,141,1.534,142,1.294,143,1.294,144,1.534,145,1.294,146,1.727,147,2.225,148,1.294,149,1.294,150,1.294,151,1.088,152,1.294,153,1.534,154,1.534,155,1.294,156,1.294,157,0.573,158,1.294,159,0.573,160,0.573,161,0.573,162,0.573,163,0.573,164,0.573,165,0.573,166,0.573,167,0.984,168,0.573,169,0.573,170,0.573,171,0.573,172,0.573,173,0.573,174,0.482,175,0.573,178,2.583,180,0.573,183,1.294,186,0.984,187,1.194,188,1.194,189,1.569,190,1.569,191,1.194,192,1.194,193,0.695,194,1.194,195,1.194,196,1.194,197,1.194,198,0.695,199,0.695,200,1.861,201,1.727,202,1.194,203,0.695,204,0.695,205,1.569,210,0.695,212,0.984,216,0.695,217,1.194,218,0.482,219,2.056,221,1.194,222,1.569,223,1.861,224,1.569,225,1.194,226,1.861,227,1.569,228,1.569,229,1.569,233,0.695,234,1.569,235,1.194,236,0.695,237,2.287,268,0.349,270,2.381,274,2.287,275,1.569,392,0.695,393,0.881,394,0.881,395,1.987,396,0.881,397,0.881,398,0.881,399,0.881,400,0.881,401,2.654,402,1.512,403,2.654,404,3.546,405,2.654,406,1.512,407,1.987,408,0.881,409,1.512,410,1.512,411,1.512,412,1.512,413,1.512,414,2.654,415,2.654,416,2.654,417,2.654,418,2.357,419,1.987,420,1.512,421,0.881,422,0.881,423,0.881,424,0.881,425,2.896,426,1.987,427,0.881,428,0.881,429,0.881,430,0.881,431,0.881,432,0.881,433,0.881,434,0.881,435,0.881,436,0.881,437,0.881,438,0.881,439,0.881,440,0.881,441,0.881,442,0.881,443,0.881,444,0.881,445,0.881,446,0.881,447,0.881,448,0.881,449,0.881,450,0.881,451,0.881,452,0.881,453,1.512,454,0.881,455,0.881,456,0.881,457,1.512,458,0.881,459,0.881]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["0.1.0",{"_index":389,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":214,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":96,"title":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{}},"body":{}}],["10.0.5",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":169,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["13.4.0",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["13.5.0",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["16.18.104",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["18.3.0",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["18.3.1",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":174,"title":{"interfaces/UserPayload-2.html":{}},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["2.1.4",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":84,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["27.5.2",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":141,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":167,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["4.9.5",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":91,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":86,"title":{},"body":{"interfaces/ButtonProps.html":{},"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["5.17.0",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["5.51.15",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":139,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":93,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":94,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":387,"title":{},"body":{"overview.html":{}}}],["700",{"_index":175,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["800",{"_index":173,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["900",{"_index":142,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":1,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["action.enabled",{"_index":62,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["action.name",{"_index":64,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["action=\"add",{"_index":204,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["action=\"create",{"_index":459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action=\"edit",{"_index":456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actionname",{"_index":127,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":40,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":133,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":391,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["api_base_url",{"_index":221,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":212,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["append",{"_index":51,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aren’t",{"_index":336,"title":{},"body":{"index.html":{}}}],["assuming",{"_index":24,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{}}}],["async",{"_index":401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":282,"title":{},"body":{"index.html":{}}}],["await",{"_index":405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["babel",{"_index":351,"title":{},"body":{"index.html":{}}}],["back",{"_index":335,"title":{},"body":{"index.html":{}}}],["best",{"_index":318,"title":{},"body":{"index.html":{}}}],["bg",{"_index":87,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":149,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["blue",{"_index":147,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":12,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{}}}],["boolean(value",{"_index":53,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["bootstrapped",{"_index":281,"title":{},"body":{"index.html":{}}}],["border",{"_index":140,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["browser",{"_index":290,"title":{},"body":{"index.html":{}}}],["build",{"_index":310,"title":{},"body":{"index.html":{}}}],["builds",{"_index":311,"title":{},"body":{"index.html":{}}}],["bundles",{"_index":315,"title":{},"body":{"index.html":{}}}],["button",{"_index":20,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buttonprops",{"_index":69,"title":{"interfaces/ButtonProps.html":{}},"body":{"interfaces/ButtonProps.html":{},"coverage.html":{}}}],["can’t",{"_index":333,"title":{},"body":{"index.html":{}}}],["capitalize",{"_index":50,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":383,"title":{},"body":{"index.html":{}}}],["choices",{"_index":340,"title":{},"body":{"index.html":{}}}],["classname=\"bg",{"_index":137,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["classname=\"w",{"_index":166,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["close",{"_index":58,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":72,"title":{},"body":{"interfaces/ButtonProps.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":342,"title":{},"body":{"index.html":{}}}],["commands",{"_index":357,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":339,"title":{},"body":{"index.html":{}}}],["console",{"_index":298,"title":{},"body":{"index.html":{}}}],["console.error(\"user",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":37,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":355,"title":{},"body":{"index.html":{}}}],["copied",{"_index":362,"title":{},"body":{"index.html":{}}}],["copy",{"_index":347,"title":{},"body":{"index.html":{}}}],["correctly",{"_index":314,"title":{},"body":{"index.html":{}}}],["couldn’t",{"_index":380,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":206,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":102,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":193,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["createuser",{"_index":222,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":197,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["curated",{"_index":367,"title":{},"body":{"index.html":{}}}],["customize",{"_index":381,"title":{},"body":{"index.html":{}}}],["dark:bg",{"_index":153,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["dark:border",{"_index":154,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["dark:focus:ring",{"_index":170,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["dark:placeholder",{"_index":155,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["dark:ring",{"_index":171,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["dark:text",{"_index":156,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":29,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":66,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":103,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["deleted",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleteuser",{"_index":223,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["deleteuser(userid",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":241,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":345,"title":{},"body":{"index.html":{}}}],["deployed",{"_index":325,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":326,"title":{},"body":{"index.html":{}}}],["deployments",{"_index":373,"title":{},"body":{"index.html":{}}}],["development",{"_index":287,"title":{},"body":{"index.html":{}}}],["directory",{"_index":283,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(\"root",{"_index":431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":207,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["don’t",{"_index":365,"title":{},"body":{"index.html":{}}}],["e",{"_index":119,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["e.preventdefault",{"_index":121,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["edit",{"_index":134,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["edits.you",{"_index":294,"title":{},"body":{"index.html":{}}}],["eject",{"_index":327,"title":{},"body":{"index.html":{}}}],["email",{"_index":101,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":9,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.message",{"_index":448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":43,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["error(\"network",{"_index":416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error).message",{"_index":440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.message",{"_index":198,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":297,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":352,"title":{},"body":{"index.html":{}}}],["etc",{"_index":353,"title":{},"body":{"index.html":{}}}],["event",{"_index":81,"title":{},"body":{"interfaces/ButtonProps.html":{},"dependencies.html":{}}}],["except",{"_index":358,"title":{},"body":{"index.html":{}}}],["export",{"_index":65,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{}}}],["false",{"_index":110,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":368,"title":{},"body":{"index.html":{}}}],["feel",{"_index":375,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":27,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{}}}],["fetch(`${api_base_url}/users",{"_index":406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetch(`${api_base_url}/users/${id",{"_index":419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetchallusers",{"_index":224,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetchfunction",{"_index":273,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["fetchuserbyid",{"_index":225,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetchuserbyid(id",{"_index":429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":124,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"coverage.html":{}}}],["filenames",{"_index":321,"title":{},"body":{"index.html":{}}}],["files",{"_index":348,"title":{},"body":{"index.html":{}}}],["filter(action",{"_index":61,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":135,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["firstname",{"_index":99,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["focus:border",{"_index":148,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["focus:ring",{"_index":146,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["folder.it",{"_index":313,"title":{},"body":{"index.html":{}}}],["form",{"_index":123,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":151,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":78,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":269,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":278,"title":{"index.html":{}},"body":{"index.html":{}}}],["go",{"_index":334,"title":{},"body":{"index.html":{}}}],["gradient",{"_index":88,"title":{},"body":{"interfaces/ButtonProps.html":{},"miscellaneous/variables.html":{}}}],["gray",{"_index":138,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["green",{"_index":90,"title":{},"body":{"interfaces/ButtonProps.html":{},"miscellaneous/variables.html":{}}}],["h",{"_index":168,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["handlecheckboxchange",{"_index":126,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["handlecheckboxchange(key",{"_index":165,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["handledelete",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handledelete(user?.id",{"_index":454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handlesubmit",{"_index":118,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["hashes.your",{"_index":323,"title":{},"body":{"index.html":{}}}],["headers",{"_index":409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":73,"title":{},"body":{"interfaces/ButtonProps.html":{},"miscellaneous/variables.html":{}}}],["hook",{"_index":25,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{}}}],["hooks",{"_index":23,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{}}}],["hooks.ts",{"_index":219,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hooks/api",{"_index":22,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{}}}],["htmlelement",{"_index":432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000",{"_index":289,"title":{},"body":{"index.html":{}}}],["http://localhost:8000",{"_index":400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":178,"title":{},"body":{"interfaces/UserPayload.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":208,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{}}}],["include",{"_index":322,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{}}}],["information",{"_index":309,"title":{},"body":{"index.html":{}}}],["instead",{"_index":346,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":302,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"coverage.html":{}}}],["interface.ts",{"_index":177,"title":{},"body":{"interfaces/UserPayload.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"overview.html":{}}}],["iserror",{"_index":433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iserrordelete",{"_index":434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isloading",{"_index":42,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["ismodalactionopen",{"_index":435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ismodalopen",{"_index":187,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["isopen",{"_index":31,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":49,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(userdata",{"_index":413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":52,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["key.charat(0).touppercase",{"_index":47,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["key.slice(1",{"_index":48,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["keyof",{"_index":128,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":159,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["lastname",{"_index":100,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["launches",{"_index":300,"title":{},"body":{"index.html":{}}}],["learn",{"_index":382,"title":{},"body":{"index.html":{}}}],["lg",{"_index":145,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["library/jest",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["library/react",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["library/user",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["lint",{"_index":296,"title":{},"body":{"index.html":{}}}],["literal",{"_index":179,"title":{},"body":{"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{}}}],["loading",{"_index":438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":293,"title":{},"body":{"index.html":{}}}],["map(action",{"_index":63,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":68,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["middle",{"_index":372,"title":{},"body":{"index.html":{}}}],["minified",{"_index":320,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":268,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":59,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["modalprops",{"_index":30,"title":{"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"coverage.html":{}}}],["mode",{"_index":316,"title":{},"body":{"index.html":{}}}],["mode.open",{"_index":288,"title":{},"body":{"index.html":{}}}],["mode.see",{"_index":304,"title":{},"body":{"index.html":{}}}],["modules",{"_index":385,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":308,"title":{},"body":{"index.html":{}}}],["move",{"_index":105,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["mutate",{"_index":190,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["mutate(payload",{"_index":199,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["mutationfn",{"_index":425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":10,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":237,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":328,"title":{},"body":{"index.html":{}}}],["npm",{"_index":284,"title":{},"body":{"index.html":{}}}],["null",{"_index":56,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["object.entries(actions).map(([key",{"_index":164,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["object.entries(user.actions).map(([key",{"_index":46,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["obligated",{"_index":376,"title":{},"body":{"index.html":{}}}],["occurred",{"_index":439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":172,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["ok",{"_index":417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omit",{"_index":275,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["once",{"_index":332,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":74,"title":{},"body":{"interfaces/ButtonProps.html":{},"miscellaneous/variables.html":{}}}],["onclose",{"_index":32,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":329,"title":{},"body":{"index.html":{}}}],["onerror",{"_index":195,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["onsubmit",{"_index":34,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["onsubmit(payload",{"_index":122,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["onsubmit={handlesubmit",{"_index":205,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["onsuccess",{"_index":191,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["operation",{"_index":331,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":317,"title":{},"body":{"index.html":{}}}],["optional",{"_index":71,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":274,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":384,"title":{},"body":{"index.html":{}}}],["over",{"_index":356,"title":{},"body":{"index.html":{}}}],["overview",{"_index":386,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":152,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":240,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":291,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":276,"title":{},"body":{"miscellaneous/functions.html":{}}}],["partial",{"_index":420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":35,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":319,"title":{},"body":{"index.html":{}}}],["placeholder=\"first",{"_index":157,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["placeholder=\"last",{"_index":161,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["placeholder=\"name@company.com",{"_index":163,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["point",{"_index":361,"title":{},"body":{"index.html":{}}}],["post",{"_index":408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prev",{"_index":131,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["prev[actionname",{"_index":132,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":312,"title":{},"body":{"index.html":{}}}],["project",{"_index":280,"title":{},"body":{"index.html":{}}}],["promise",{"_index":403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"properties.html":{}}}],["put",{"_index":421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["px",{"_index":85,"title":{},"body":{"interfaces/ButtonProps.html":{},"miscellaneous/variables.html":{}}}],["py",{"_index":83,"title":{},"body":{"interfaces/ButtonProps.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["queryclient",{"_index":234,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["querykey",{"_index":272,"title":{},"body":{"miscellaneous/functions.html":{}}}],["r",{"_index":89,"title":{},"body":{"interfaces/ButtonProps.html":{},"miscellaneous/variables.html":{}}}],["react",{"_index":17,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"dependencies.html":{},"index.html":{}}}],["react.fc",{"_index":39,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["react.formevent",{"_index":120,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["react.mouseevent",{"_index":82,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["reactdom.createroot",{"_index":430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ready",{"_index":324,"title":{},"body":{"index.html":{}}}],["reload",{"_index":292,"title":{},"body":{"index.html":{}}}],["remove",{"_index":343,"title":{},"body":{"index.html":{}}}],["required",{"_index":158,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":80,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["response",{"_index":404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response.json",{"_index":418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response.ok",{"_index":414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":67,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":55,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":354,"title":{},"body":{"index.html":{}}}],["root",{"_index":235,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rounded",{"_index":144,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":57,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["runner",{"_index":301,"title":{},"body":{"index.html":{}}}],["running",{"_index":306,"title":{},"body":{"index.html":{}}}],["runs",{"_index":286,"title":{},"body":{"index.html":{}}}],["satisfied",{"_index":337,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":260,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["section",{"_index":305,"title":{},"body":{"index.html":{}}}],["see",{"_index":295,"title":{},"body":{"index.html":{}}}],["select",{"_index":60,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":369,"title":{},"body":{"index.html":{}}}],["setactions",{"_index":41,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["setactions((prev",{"_index":130,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["setactions(transformedactions",{"_index":54,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["setemail",{"_index":109,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["setemail(e.target.value",{"_index":162,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["setemail(user.email",{"_index":113,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["setfirstname",{"_index":107,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["setfirstname(e.target.value",{"_index":136,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["setfirstname(user.firstname",{"_index":111,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["setismodalactionopen",{"_index":436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setismodalactionopen(false",{"_index":458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setismodalactionopen(true",{"_index":455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setismodalopen",{"_index":188,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["setismodalopen(false",{"_index":200,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["setismodalopen(true",{"_index":202,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["setlastname",{"_index":108,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["setlastname(e.target.value",{"_index":160,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["setlastname(user.lastname",{"_index":112,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["setuserid",{"_index":437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setuserid(user?.id",{"_index":453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared/button",{"_index":181,"title":{},"body":{"interfaces/UserPayload-2.html":{}}}],["shared/usermodal",{"_index":182,"title":{},"body":{"interfaces/UserPayload-2.html":{}}}],["shouldn’t",{"_index":374,"title":{},"body":{"index.html":{}}}],["single",{"_index":344,"title":{},"body":{"index.html":{}}}],["sm",{"_index":143,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["small",{"_index":371,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{}}}],["src/.../api",{"_index":270,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.tsx",{"_index":393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../button.tsx",{"_index":394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.tsx",{"_index":395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../useractionmodal.tsx",{"_index":396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../usermodal.tsx",{"_index":397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../usersheader.tsx",{"_index":398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../userstable.tsx",{"_index":399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.tsx",{"_index":210,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/common/presentational/usersheader.tsx",{"_index":180,"title":{},"body":{"interfaces/UserPayload-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/common/presentational/userstable.tsx",{"_index":216,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/hooks/api",{"_index":218,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/components/shared/button.tsx",{"_index":70,"title":{},"body":{"interfaces/ButtonProps.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/shared/useractionmodal.tsx",{"_index":6,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/shared/usermodal.tsx",{"_index":97,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helpers/users",{"_index":176,"title":{},"body":{"interfaces/UserPayload.html":{},"coverage.html":{}}}],["src/index.tsx",{"_index":233,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/pages/users/index.tsx",{"_index":236,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":285,"title":{},"body":{"index.html":{}}}],["started",{"_index":279,"title":{"index.html":{}},"body":{"index.html":{}}}],["statements",{"_index":209,"title":{},"body":{"coverage.html":{}}}],["still",{"_index":359,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["submission",{"_index":125,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["submit",{"_index":79,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["successfully",{"_index":194,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["suitable",{"_index":370,"title":{},"body":{"index.html":{}}}],["table",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["tanstack/react",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["test",{"_index":299,"title":{},"body":{"index.html":{}}}],["testing",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["tests",{"_index":307,"title":{},"body":{"index.html":{}}}],["text",{"_index":75,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["text=\"create",{"_index":203,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["textcolor",{"_index":76,"title":{},"body":{"interfaces/ButtonProps.html":{},"miscellaneous/variables.html":{}}}],["throw",{"_index":415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":341,"title":{},"body":{"index.html":{}}}],["toast",{"_index":184,"title":{},"body":{"interfaces/UserPayload-2.html":{}}}],["toast.error(\"error",{"_index":196,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["toast.success(\"user",{"_index":192,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["toastify",{"_index":185,"title":{},"body":{"interfaces/UserPayload-2.html":{},"dependencies.html":{}}}],["tool",{"_index":338,"title":{},"body":{"index.html":{}}}],["transformedactions",{"_index":45,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"miscellaneous/variables.html":{}}}],["transitive",{"_index":349,"title":{},"body":{"index.html":{}}}],["tweak",{"_index":363,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":390,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":129,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["types/jest",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["types/react",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["understand",{"_index":377,"title":{},"body":{"index.html":{}}}],["update",{"_index":423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateuser",{"_index":226,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateuser(id",{"_index":427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":366,"title":{},"body":{"index.html":{}}}],["useallusers",{"_index":227,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["useapiquery",{"_index":220,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["useapiquery([\"user",{"_index":428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useapiquery([\"users",{"_index":424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useapiquery(querykey",{"_index":271,"title":{},"body":{"miscellaneous/functions.html":{}}}],["usecreateuser",{"_index":183,"title":{},"body":{"interfaces/UserPayload-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":26,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{}}}],["usedeleteuser",{"_index":228,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["useeffect",{"_index":19,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":379,"title":{},"body":{"index.html":{}}}],["usemutation",{"_index":426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":28,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["user.actions.create",{"_index":114,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["user.actions.delete",{"_index":115,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["user.actions.move",{"_index":117,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["user.actions.view",{"_index":116,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["user?.email",{"_index":452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?.firstname",{"_index":450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?.lastname",{"_index":451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useractionmodal",{"_index":38,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdata",{"_index":402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":36,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["userid={userid",{"_index":457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usermodal",{"_index":106,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userpayload",{"_index":98,"title":{"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{}},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":201,"title":{},"body":{"interfaces/UserPayload-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.map((user",{"_index":449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usersheader",{"_index":186,"title":{},"body":{"interfaces/UserPayload-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userstable",{"_index":217,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["usestate",{"_index":18,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["usestate(false",{"_index":189,"title":{},"body":{"interfaces/UserPayload-2.html":{},"miscellaneous/variables.html":{}}}],["useupdateuser",{"_index":229,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["useuserbyid",{"_index":21,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useuserbyid(userid",{"_index":44,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":11,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":211,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":392,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":388,"title":{},"body":{"properties.html":{}}}],["via",{"_index":92,"title":{},"body":{"interfaces/ButtonProps.html":{},"miscellaneous/variables.html":{}}}],["view",{"_index":104,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload.html":{},"interfaces/UserPayload-1.html":{},"interfaces/UserPayload-2.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vitals",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["void",{"_index":33,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ButtonProps.html":{},"interfaces/ModalProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{}}}],["w",{"_index":150,"title":{},"body":{"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["watch",{"_index":303,"title":{},"body":{"index.html":{}}}],["way",{"_index":330,"title":{},"body":{"index.html":{}}}],["web",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["webpack",{"_index":350,"title":{},"body":{"index.html":{}}}],["white",{"_index":95,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ModalProps-1.html":{},"interfaces/UserPayload-1.html":{},"miscellaneous/variables.html":{}}}],["width",{"_index":77,"title":{},"body":{"interfaces/ButtonProps.html":{},"miscellaneous/variables.html":{}}}],["work",{"_index":360,"title":{},"body":{"index.html":{}}}],["wouldn’t",{"_index":378,"title":{},"body":{"index.html":{}}}],["yes",{"_index":277,"title":{},"body":{"miscellaneous/functions.html":{}}}],["you’re",{"_index":364,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/shared/UserActionModal.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            enabled\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport { useUserById } from \"../hooks/api-hooks\"; // Assuming this hook is used to fetch user data\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  action: string;\n  onSubmit: (payload: any) => void;\n  userId?: string;\n}\n\ninterface Action {\n  name: string;\n  value: string;\n  enabled: boolean;\n}\n\nconst UserActionModal: React.FC = ({ isOpen, onClose, userId }) => {\n  const [actions, setActions] = useState([]);\n  const { data: user, isLoading, error } = useUserById(userId as string);\n  useEffect(() => {\n    if (isOpen && user) {\n      const transformedActions: Action[] = Object.entries(user.actions).map(([key, value]) => ({\n        name: key.charAt(0).toUpperCase() + key.slice(1) + \" item\", // Capitalize and append \"item\"\n        value: key,\n        enabled: Boolean(value),\n      }));\n      setActions(transformedActions);\n    }\n  }, [isOpen, user]);\n\n  if (!isOpen) return null;\n\n  return (\n    \n      \n        \n          \n            \n              Run Actions\n            \n            \n              \n                \n              \n              Close modal\n            \n          \n          \n            \n              \n                Select an Action\n              \n              \n                {actions\n                  .filter(action => action.enabled)\n                  .map(action => (\n                    \n                      {action.name}\n                    \n                  ))}\n              \n            \n          \n        \n      \n    \n  );\n};\n\nexport default UserActionModal;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonProps.html":{"url":"interfaces/ButtonProps.html","title":"interface - ButtonProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/shared/Button.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onClick\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onClick:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"button\" | \"submit\" | \"reset\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"button\" | \"submit\" | \"reset\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React from \"react\";\n\ninterface ButtonProps {\n  height?: string;\n  width?: string;\n  color?: string;\n  textColor?: string;\n  text?: string;\n  type?: \"button\" | \"submit\" | \"reset\";\n  onClick?: (event: React.MouseEvent) => void;\n}\n\nconst Button: React.FC = ({\n  height = \"py-2.5\",\n  width = \"px-5\",\n  color = \"bg-gradient-to-r from-green-400 via-green-500 to-green-600\",\n  textColor = \"text-white\",\n  text = \"Button\",\n  type = \"button\",\n  onClick,\n}) => {\n  return (\n    \n      {text}\n    \n  );\n};\n\nexport default Button;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalProps.html":{"url":"interfaces/ModalProps.html","title":"interface - ModalProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/shared/UserActionModal.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            isOpen\n                                        \n                                \n                                \n                                        \n                                            onClose\n                                        \n                                \n                                \n                                        \n                                            onSubmit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onClose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onClose:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSubmit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onSubmit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport { useUserById } from \"../hooks/api-hooks\"; // Assuming this hook is used to fetch user data\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  action: string;\n  onSubmit: (payload: any) => void;\n  userId?: string;\n}\n\ninterface Action {\n  name: string;\n  value: string;\n  enabled: boolean;\n}\n\nconst UserActionModal: React.FC = ({ isOpen, onClose, userId }) => {\n  const [actions, setActions] = useState([]);\n  const { data: user, isLoading, error } = useUserById(userId as string);\n  useEffect(() => {\n    if (isOpen && user) {\n      const transformedActions: Action[] = Object.entries(user.actions).map(([key, value]) => ({\n        name: key.charAt(0).toUpperCase() + key.slice(1) + \" item\", // Capitalize and append \"item\"\n        value: key,\n        enabled: Boolean(value),\n      }));\n      setActions(transformedActions);\n    }\n  }, [isOpen, user]);\n\n  if (!isOpen) return null;\n\n  return (\n    \n      \n        \n          \n            \n              Run Actions\n            \n            \n              \n                \n              \n              Close modal\n            \n          \n          \n            \n              \n                Select an Action\n              \n              \n                {actions\n                  .filter(action => action.enabled)\n                  .map(action => (\n                    \n                      {action.name}\n                    \n                  ))}\n              \n            \n          \n        \n      \n    \n  );\n};\n\nexport default UserActionModal;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalProps-1.html":{"url":"interfaces/ModalProps-1.html","title":"interface - ModalProps-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/shared/UserModal.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            isOpen\n                                        \n                                \n                                \n                                        \n                                            onClose\n                                        \n                                \n                                \n                                        \n                                            onSubmit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onClose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onClose:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSubmit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onSubmit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport { useUserById } from \"../hooks/api-hooks\";\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  action: string;\n  onSubmit: (payload: UserPayload) => void;\n  userId?: string;\n}\n\ninterface UserPayload {\n  firstName: string;\n  lastName: string;\n  email: string;\n  actions: {\n    create: boolean;\n    delete: boolean;\n    view: boolean;\n    move: boolean;\n  };\n}\n\nconst UserModal: React.FC = ({\n  isOpen,\n  onClose,\n  action,\n  onSubmit,\n  userId,\n}) => {\n  const { data: user, isLoading, error } = useUserById(userId as string);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [actions, setActions] = useState({\n    create: false,\n    delete: false,\n    view: false,\n    move: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setFirstName(user.firstName || \"\");\n      setLastName(user.lastName || \"\");\n      setEmail(user.email || \"\");\n      setActions({\n        create: user.actions.create || false,\n        delete: user.actions.delete || false,\n        view: user.actions.view || false,\n        move: user.actions.move || false,\n      });\n    }\n  }, [user]);\n\n  if (!isOpen) return null;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const payload: UserPayload = {\n      firstName,\n      lastName,\n      email,\n      actions,\n    };\n    onSubmit(payload);\n    // Reset form fields after submission\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setActions({ create: false, delete: false, view: false, move: false });\n  };\n\n  const handleCheckboxChange = (actionName: keyof typeof actions) => {\n    setActions((prev) => ({ ...prev, [actionName]: !prev[actionName] }));\n  };\n\n  return (\n    \n      \n        \n          \n            \n              {action === \"add\" ? \"Create User\" : \"Edit User\"}\n            \n            \n              \n                \n              \n              Close modal\n            \n          \n          \n            \n              \n                \n                  Your First Name\n                \n                 setFirstName(e.target.value)}\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                  placeholder=\"First Name\"\n                  required\n                />\n              \n              \n                \n                  Your Last Name\n                \n                 setLastName(e.target.value)}\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                  placeholder=\"Last Name\"\n                  required\n                />\n              \n              \n                \n                  Your Email\n                \n                 setEmail(e.target.value)}\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                  placeholder=\"name@company.com\"\n                  required\n                />\n              \n\n              {Object.entries(actions).map(([key, value]) => (\n                \n                  \n                      handleCheckboxChange(key as keyof typeof actions)\n                    }\n                    className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n                  />\n                  \n                    {key.charAt(0).toUpperCase() + key.slice(1)} item\n                  \n                \n              ))}\n\n              \n                \n                \n              \n            \n          \n        \n      \n    \n  );\n};\n\nexport default UserModal;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPayload.html":{"url":"interfaces/UserPayload.html","title":"interface - UserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/helpers/users-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actions\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserPayload {\n  firstName: string;\n  lastName: string;\n  email: string;\n  actions: {\n    create: boolean;\n    delete: boolean;\n    view: boolean;\n    move: boolean;\n  };\n  id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPayload-1.html":{"url":"interfaces/UserPayload-1.html","title":"interface - UserPayload-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/shared/UserModal.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actions\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport { useUserById } from \"../hooks/api-hooks\";\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  action: string;\n  onSubmit: (payload: UserPayload) => void;\n  userId?: string;\n}\n\ninterface UserPayload {\n  firstName: string;\n  lastName: string;\n  email: string;\n  actions: {\n    create: boolean;\n    delete: boolean;\n    view: boolean;\n    move: boolean;\n  };\n}\n\nconst UserModal: React.FC = ({\n  isOpen,\n  onClose,\n  action,\n  onSubmit,\n  userId,\n}) => {\n  const { data: user, isLoading, error } = useUserById(userId as string);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [actions, setActions] = useState({\n    create: false,\n    delete: false,\n    view: false,\n    move: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setFirstName(user.firstName || \"\");\n      setLastName(user.lastName || \"\");\n      setEmail(user.email || \"\");\n      setActions({\n        create: user.actions.create || false,\n        delete: user.actions.delete || false,\n        view: user.actions.view || false,\n        move: user.actions.move || false,\n      });\n    }\n  }, [user]);\n\n  if (!isOpen) return null;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const payload: UserPayload = {\n      firstName,\n      lastName,\n      email,\n      actions,\n    };\n    onSubmit(payload);\n    // Reset form fields after submission\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setActions({ create: false, delete: false, view: false, move: false });\n  };\n\n  const handleCheckboxChange = (actionName: keyof typeof actions) => {\n    setActions((prev) => ({ ...prev, [actionName]: !prev[actionName] }));\n  };\n\n  return (\n    \n      \n        \n          \n            \n              {action === \"add\" ? \"Create User\" : \"Edit User\"}\n            \n            \n              \n                \n              \n              Close modal\n            \n          \n          \n            \n              \n                \n                  Your First Name\n                \n                 setFirstName(e.target.value)}\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                  placeholder=\"First Name\"\n                  required\n                />\n              \n              \n                \n                  Your Last Name\n                \n                 setLastName(e.target.value)}\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                  placeholder=\"Last Name\"\n                  required\n                />\n              \n              \n                \n                  Your Email\n                \n                 setEmail(e.target.value)}\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                  placeholder=\"name@company.com\"\n                  required\n                />\n              \n\n              {Object.entries(actions).map(([key, value]) => (\n                \n                  \n                      handleCheckboxChange(key as keyof typeof actions)\n                    }\n                    className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n                  />\n                  \n                    {key.charAt(0).toUpperCase() + key.slice(1)} item\n                  \n                \n              ))}\n\n              \n                \n                \n              \n            \n          \n        \n      \n    \n  );\n};\n\nexport default UserModal;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPayload-2.html":{"url":"interfaces/UserPayload-2.html","title":"interface - UserPayload-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/common/presentational/UsersHeader.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actions\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useState } from \"react\";\nimport Button from \"../../shared/Button\";\nimport UserModal from \"../../shared/UserModal\";\nimport { useCreateUser } from \"../../hooks/api-hooks\";\nimport { toast } from \"react-toastify\";\n\ninterface UserPayload {\n  firstName: string;\n  lastName: string;\n  email: string;\n  actions: {\n    create: boolean;\n    delete: boolean;\n    view: boolean;\n    move: boolean;\n  };\n}\nconst UsersHeader = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { mutate, error } = useCreateUser({\n    onSuccess: () => {\n      toast.success(\"User created successfully!\");\n    },\n    onError: (error) => {\n      toast.error(\"Error creating user: \" + error.message);\n    },\n  });\n\n  const handleSubmit = (payload: UserPayload) => {\n    mutate(payload);\n    setIsModalOpen(false);\n  };\n  return (\n    \n      Users\n       setIsModalOpen(true)} text=\"Create\" />\n       setIsModalOpen(false)}\n        action=\"add\"\n        onSubmit={handleSubmit}\n      />\n    \n  );\n};\n\nexport default UsersHeader;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/App.tsx\n            \n            variable\n            App\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/common/presentational/UsersHeader.tsx\n            \n            interface\n            UserPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/common/presentational/UsersHeader.tsx\n            \n            variable\n            UsersHeader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/common/presentational/UsersTable.tsx\n            \n            variable\n            UsersTable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/hooks/api-hooks.ts\n            \n            function\n            useApiQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/hooks/api-hooks.ts\n            \n            variable\n            API_BASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/hooks/api-hooks.ts\n            \n            variable\n            createUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/hooks/api-hooks.ts\n            \n            variable\n            deleteUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/hooks/api-hooks.ts\n            \n            variable\n            fetchAllUsers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/hooks/api-hooks.ts\n            \n            variable\n            fetchUserById\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/hooks/api-hooks.ts\n            \n            variable\n            updateUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/hooks/api-hooks.ts\n            \n            variable\n            useAllUsers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/hooks/api-hooks.ts\n            \n            variable\n            useCreateUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/hooks/api-hooks.ts\n            \n            variable\n            useDeleteUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/hooks/api-hooks.ts\n            \n            variable\n            useUpdateUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/hooks/api-hooks.ts\n            \n            variable\n            useUserById\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/shared/Button.tsx\n            \n            interface\n            ButtonProps\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/shared/Button.tsx\n            \n            variable\n            Button\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/shared/UserActionModal.tsx\n            \n            interface\n            Action\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/shared/UserActionModal.tsx\n            \n            interface\n            ModalProps\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/components/shared/UserActionModal.tsx\n            \n            variable\n            UserActionModal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/shared/UserModal.tsx\n            \n            interface\n            ModalProps\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/components/shared/UserModal.tsx\n            \n            interface\n            UserPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/shared/UserModal.tsx\n            \n            variable\n            UserModal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helpers/users-interface.ts\n            \n            interface\n            UserPayload\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/index.tsx\n            \n            variable\n            queryClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/index.tsx\n            \n            variable\n            root\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pages/users/index.tsx\n            \n            variable\n            Users\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @tanstack/react-query : ^5.51.15\n        \n            @testing-library/jest-dom : ^5.17.0\n        \n            @testing-library/react : ^13.4.0\n        \n            @testing-library/user-event : ^13.5.0\n        \n            @types/jest : ^27.5.2\n        \n            @types/node : ^16.18.104\n        \n            @types/react-dom : ^18.3.0\n        \n            react : ^18.3.1\n        \n            react-dom : ^18.3.1\n        \n            react-scripts : 5.0.1\n        \n            react-toastify : ^10.0.5\n        \n            typescript : ^4.9.5\n        \n            web-vitals : ^2.1.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            useApiQuery   (src/.../api-hooks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/hooks/api-hooks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        useApiQuery\n                        \n                    \n                \n            \n            \n                \nuseApiQuery(queryKey: QueryKey, fetchFunction: FetchFunction, options?: Omit)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryKey\n                                            \n                                                        QueryKey\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fetchFunction\n                                            \n                                                            FetchFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGetting Started with Create React App\nThis project was bootstrapped with Create React App.\nAvailable Scripts\nIn the project directory, you can run:\nnpm start\nRuns the app in the development mode.Open http://localhost:3000 to view it in the browser.\nThe page will reload if you make edits.You will also see any lint errors in the console.\nnpm test\nLaunches the test runner in the interactive watch mode.See the section about running tests for more information.\nnpm run build\nBuilds the app for production to the build folder.It correctly bundles React in production mode and optimizes the build for the best performance.\nThe build is minified and the filenames include the hashes.Your app is ready to be deployed!\nSee the section about deployment for more information.\nnpm run eject\nNote: this is a one-way operation. Once you eject, you can’t go back!\nIf you aren’t satisfied with the build tool and configuration choices, you can eject at any time. This command will remove the single build dependency from your project.\nInstead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except eject will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.\nYou don’t have to ever use eject. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.\nLearn More\nYou can learn more in the Create React App documentation.\nTo learn React, check out the React documentation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FetchFunction   (src/.../api-hooks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/hooks/api-hooks.ts\n    \n    \n        \n            \n                \n                    \n                    FetchFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_BASE_URL   (src/.../api-hooks.ts)\n                        \n                        \n                            App   (src/.../App.tsx)\n                        \n                        \n                            Button   (src/.../Button.tsx)\n                        \n                        \n                            createUser   (src/.../api-hooks.ts)\n                        \n                        \n                            deleteUser   (src/.../api-hooks.ts)\n                        \n                        \n                            fetchAllUsers   (src/.../api-hooks.ts)\n                        \n                        \n                            fetchUserById   (src/.../api-hooks.ts)\n                        \n                        \n                            queryClient   (src/.../index.tsx)\n                        \n                        \n                            root   (src/.../index.tsx)\n                        \n                        \n                            updateUser   (src/.../api-hooks.ts)\n                        \n                        \n                            useAllUsers   (src/.../api-hooks.ts)\n                        \n                        \n                            useCreateUser   (src/.../api-hooks.ts)\n                        \n                        \n                            useDeleteUser   (src/.../api-hooks.ts)\n                        \n                        \n                            UserActionModal   (src/.../UserActionModal.tsx)\n                        \n                        \n                            UserModal   (src/.../UserModal.tsx)\n                        \n                        \n                            Users   (src/.../index.tsx)\n                        \n                        \n                            UsersHeader   (src/.../UsersHeader.tsx)\n                        \n                        \n                            UsersTable   (src/.../UsersTable.tsx)\n                        \n                        \n                            useUpdateUser   (src/.../api-hooks.ts)\n                        \n                        \n                            useUserById   (src/.../api-hooks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/hooks/api-hooks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_BASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http://localhost:8000\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  userData: UserPayload\n): Promise => {\n  const response = await fetch(`${API_BASE_URL}/users`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(userData),\n  });\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (id: string): Promise => {\n  const response = await fetch(`${API_BASE_URL}/users/${id}`, {\n    method: \"DELETE\",\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllUsers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise => {\n  const response = await fetch(`${API_BASE_URL}/users`);\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUserById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (id: string): Promise => {\n  const response = await fetch(`${API_BASE_URL}/users/${id}`);\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  id: string,\n  userData: Partial\n): Promise => {\n  const response = await fetch(`${API_BASE_URL}/users/${id}`, {\n    method: \"PUT\", // or \"PATCH\" if partial update\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(userData),\n  });\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useAllUsers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  useApiQuery([\"users\"], fetchAllUsers)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useCreateUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  options?: Omit,\n    \"mutationFn\"\n  >\n) => {\n  return useMutation({\n    mutationFn: createUser,\n    ...options,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useDeleteUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  options?: Omit, \"mutationFn\">\n) => {\n  return useMutation({\n    mutationFn: deleteUser,\n    ...options,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useUpdateUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  options?: Omit }\n    >,\n    \"mutationFn\"\n  >\n) => {\n  return useMutation({\n    mutationFn: ({ id, data }) => updateUser(id, data),\n    ...options,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useUserById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (id: string) =>\n  useApiQuery([\"user\", id], () => fetchUserById(id))\n                    \n                \n\n\n        \n    \n\n    src/App.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        App\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return (\n    <>\n      \n      \n    \n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/components/shared/Button.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        Button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         React.FC\n\n                    \n                \n                \n                    \n                        Default value : ({\n  height = \"py-2.5\",\n  width = \"px-5\",\n  color = \"bg-gradient-to-r from-green-400 via-green-500 to-green-600\",\n  textColor = \"text-white\",\n  text = \"Button\",\n  type = \"button\",\n  onClick,\n}) => {\n  return (\n    \n      {text}\n    \n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/index.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        queryClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new QueryClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n)\n                    \n                \n\n\n        \n    \n\n    src/components/shared/UserActionModal.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        UserActionModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     React.FC\n\n                    \n                \n                \n                    \n                        Default value : ({ isOpen, onClose, userId }) => {\n  const [actions, setActions] = useState([]);\n  const { data: user, isLoading, error } = useUserById(userId as string);\n  useEffect(() => {\n    if (isOpen && user) {\n      const transformedActions: Action[] = Object.entries(user.actions).map(([key, value]) => ({\n        name: key.charAt(0).toUpperCase() + key.slice(1) + \" item\", // Capitalize and append \"item\"\n        value: key,\n        enabled: Boolean(value),\n      }));\n      setActions(transformedActions);\n    }\n  }, [isOpen, user]);\n\n  if (!isOpen) return null;\n\n  return (\n    \n      \n        \n          \n            \n              Run Actions\n            \n            \n              \n                \n              \n              Close modal\n            \n          \n          \n            \n              \n                Select an Action\n              \n              \n                {actions\n                  .filter(action => action.enabled)\n                  .map(action => (\n                    \n                      {action.name}\n                    \n                  ))}\n              \n            \n          \n        \n      \n    \n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/components/shared/UserModal.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        UserModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     React.FC\n\n                    \n                \n                \n                    \n                        Default value : ({\n  isOpen,\n  onClose,\n  action,\n  onSubmit,\n  userId,\n}) => {\n  const { data: user, isLoading, error } = useUserById(userId as string);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [actions, setActions] = useState({\n    create: false,\n    delete: false,\n    view: false,\n    move: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setFirstName(user.firstName || \"\");\n      setLastName(user.lastName || \"\");\n      setEmail(user.email || \"\");\n      setActions({\n        create: user.actions.create || false,\n        delete: user.actions.delete || false,\n        view: user.actions.view || false,\n        move: user.actions.move || false,\n      });\n    }\n  }, [user]);\n\n  if (!isOpen) return null;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const payload: UserPayload = {\n      firstName,\n      lastName,\n      email,\n      actions,\n    };\n    onSubmit(payload);\n    // Reset form fields after submission\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setActions({ create: false, delete: false, view: false, move: false });\n  };\n\n  const handleCheckboxChange = (actionName: keyof typeof actions) => {\n    setActions((prev) => ({ ...prev, [actionName]: !prev[actionName] }));\n  };\n\n  return (\n    \n      \n        \n          \n            \n              {action === \"add\" ? \"Create User\" : \"Edit User\"}\n            \n            \n              \n                \n              \n              Close modal\n            \n          \n          \n            \n              \n                \n                  Your First Name\n                \n                 setFirstName(e.target.value)}\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                  placeholder=\"First Name\"\n                  required\n                />\n              \n              \n                \n                  Your Last Name\n                \n                 setLastName(e.target.value)}\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                  placeholder=\"Last Name\"\n                  required\n                />\n              \n              \n                \n                  Your Email\n                \n                 setEmail(e.target.value)}\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\n                  placeholder=\"name@company.com\"\n                  required\n                />\n              \n\n              {Object.entries(actions).map(([key, value]) => (\n                \n                  \n                      handleCheckboxChange(key as keyof typeof actions)\n                    }\n                    className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n                  />\n                  \n                    {key.charAt(0).toUpperCase() + key.slice(1)} item\n                  \n                \n              ))}\n\n              \n                \n                \n              \n            \n          \n        \n      \n    \n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/pages/users/index.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        Users\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return (\n    \n      \n      \n    \n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/components/common/presentational/UsersHeader.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        UsersHeader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { mutate, error } = useCreateUser({\n    onSuccess: () => {\n      toast.success(\"User created successfully!\");\n    },\n    onError: (error) => {\n      toast.error(\"Error creating user: \" + error.message);\n    },\n  });\n\n  const handleSubmit = (payload: UserPayload) => {\n    mutate(payload);\n    setIsModalOpen(false);\n  };\n  return (\n    \n      Users\n       setIsModalOpen(true)} text=\"Create\" />\n       setIsModalOpen(false)}\n        action=\"add\"\n        onSubmit={handleSubmit}\n      />\n    \n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/components/common/presentational/UsersTable.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        UsersTable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const { data: users, isLoading, error } = useAllUsers();\n  const { mutate: updateUser, error: iserror } = useUpdateUser();\n  const { mutate: deleteUser, error: isErrorDelete } = useDeleteUser();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isModalActionOpen, setIsModalActionOpen] = useState(false);\n  const [userId, setUserId] = useState();\n\n  if (isLoading) return Loading...;\n  if (error) return An error occurred: {(error as Error).message};\n  if (!users) return User not found;\n\n  const handleSubmit = (payload: any) => {\n    if (userId) {\n      updateUser({\n        id: userId,\n        data: payload,\n      });\n    } else {\n      console.error(\"User ID is undefined\");\n    }\n\n    setIsModalOpen(false);\n  };\n\n  const handleDelete = (userId: string) => {\n    deleteUser(userId, {\n      onSuccess: () => {\n        toast.success(\"User deleted successfully\");\n      },\n      onError: (err) => {\n        toast.error(\"Error creating user: \" + err.message);\n      },\n    });\n  };\n  return (\n    \n      \n        \n          \n            \n              NAME\n            \n            \n              EMAIL\n            \n            \n              Actions\n            \n          \n        \n        \n          {users.map((user) => {\n            return (\n              \n                {`${user?.firstName || \"\"} ${\n                  user?.lastName || \"\"\n                }`}\n                {user?.email}\n                \n                   {\n                      setUserId(user?.id);\n                      setIsModalOpen(true);\n                    }}\n                  />\n                   handleDelete(user?.id ?? \"\")}\n                  />\n                   {\n                      setUserId(user?.id);\n                      setIsModalActionOpen(true)\n                    }}\n                  />\n                \n              \n            );\n          })}\n        \n      \n       setIsModalOpen(false)}\n        action=\"edit\"\n        onSubmit={handleSubmit}\n        userId={userId}\n      />\n       setIsModalActionOpen(false)}\n        onSubmit={handleSubmit}\n        action=\"create\"\n        userId={userId}\n      />\n    \n  );\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
